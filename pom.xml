<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
  http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>mindtree</groupId>
	<artifactId>HelloWorldMaven</artifactId>
	<packaging>war</packaging>
	<version>1.6</version>
	<name>${project.artifactId}</name>
	<properties>
		<org.springframework.version>3.2.1.RELEASE</org.springframework.version>
		<hibernate.version>3.6.10.FINAl</hibernate.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
	</properties>
	<pluginRepositories>
	  <pluginRepository>
        <id>sonatype-oss-snapshots</id>
        <name>Sonatype OSS Snapshots</name>
        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
  	</pluginRepository>
  	
	</pluginRepositories>
	<dependencies>

		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.1</version>
		</dependency>

		<!-- Log4j dependency -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>


		<!-- JSTL dependency -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>compile</scope>
		</dependency>

		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.4.1</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey.contribs.jersey-oauth</groupId>
			<artifactId>oauth-client</artifactId>
			<version>1.17.1</version>
		</dependency>


		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webResources>
						<resource>
							<!-- this is relative to the pom.xml directory -->
							<directory>src/main/webapp/WEB-INF</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.codehaus.cargo</groupId> <artifactId>cargo-maven2-plugin</artifactId> 
				<configuration> <container> <containerId>tomcat7x</containerId> <type>remote</type> 
				</container> <configuration> <type>runtime</type> <properties> <cargo.server.settings>tomcat7_local</cargo.server.settings> 
				</properties> </configuration> </configuration> </plugin> <plugin> <groupId>com.mindtree.maven</groupId> 
				<artifactId>amazon-maven-plugin</artifactId> <version>0.0.1</version> <configuration> 
				<secretKey>${secret.key}</secretKey> <accessKey>${access.key}</accessKey> 
				<proxyHost>${proxyHost}</proxyHost> <proxyPort>${proxyPort}</proxyPort> <buckets> 
				<property> <name>vikesh-vehicle-rental/presentation/${project.version}</name> 
				<value>**/target/*.war;public-read</value> </property> </buckets> </configuration> 
				</plugin> -->
			<!-- Spotify Plugin commented <plugin> <groupId>com.spotify</groupId> 
				<artifactId>docker-maven-plugin</artifactId> <version>0.1.0</version> <configuration> 
				<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory> <imageName>jayaram/mtw-vr-prsentation:${project.version}</imageName> 
				<image>${project.artifactId}</image> <newName>jayaram/mtw-vr-prsentation:${project.version}</newName> 
				<resources> <resource> <targetPath>/</targetPath> <directory>${project.build.directory}</directory> 
				<include>${project.build.finalName}.war</include> </resource> </resources> 
				</configuration> </plugin> -->
			<plugin>
			
				<groupId>net.wouterdanes.docker</groupId>
				<artifactId>docker-maven-plugin</artifactId>
			  <version>3.1.0</version>
				
				<executions>
					<execution>
						<id>build</id>
						<goals>
							<goal>build-images</goal>
						</goals>
						<configuration>
							<images>
								<image>
									<id>${project.artifactId}</id>
									<dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
									<keep>true</keep>
									<artifacts>
										<artifact>
											<file>${project.basedir}/target/${project.artifactId}.war</file>
										</artifact>
										<artifact>
											<file>${project.basedir}/src/main/docker/start_up.sh</file>
										</artifact>
									</artifacts>
									<nameAndTag>preetick/mthello:${project.version}</nameAndTag>
									<!-- <registry>registry.hub.docker.com</registry> -->
									<push>true</push>
								</image>
							</images>
						</configuration>
					</execution>
					<!-- <execution>
						<id>tag</id>
						<goals>
							<goal>tag-images</goal>
						</goals>
						<configuration>
							<images>
								<image>
									<id>${project.artifactId}</id>
									<tags>
										<tag>preetick/mthello:latest</tag>
									</tags>
									<push>true</push>
								</image>
							</images>
						</configuration>
					</execution> -->
					
					<execution>
						<id>push</id>
						<goals>
							<goal>push-images</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.3.1</version>
				<executions>
					<execution>
						<id>enforce-maven-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>@maven.required.version@</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<finalName>${project.artifactId}</finalName>
	</build>
</project>
